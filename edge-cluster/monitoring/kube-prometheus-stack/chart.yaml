---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 16.12.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  values:
    namespaceOverride: "monitoring"
    kubeTargetVersionOverride: "1.19.4"
    defaultRules:
      create: false
    global:
      rbac:
        create: true
    alertmanager:
      enabled: true
      apiVersion: v2
      serviceAccount:
        create: true
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ['job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'null'
          routes:
          - match:
              alertname: Watchdog
            receiver: 'null'
        receivers:
        - name: 'null'
        templates:
        - '/etc/alertmanager/config/*.tmpl'
      ingress:
        enabled: false
      ingressPerReplica:
        enabled: false
      service:
        port: 9093
        targetPort: 9093
        nodePort: 30903
        type: ClusterIP
      servicePerReplica:
        enabled: false
      alertmanagerSpec:
        image:
          repository: quay.io/prometheus/alertmanager
          tag: v0.21.0
          sha: ""
    grafana:
      enabled: true
      defaultDashboardsEnabled: true
      adminPassword: prom-operator
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/frontend-entry-points: http, https
          traefik.ingress.kubernetes.io/redirect-entry-point: https
        hosts:
          - grafana.hormonal.party
        path: /
        tls:
          - secretName: grafana-general-tls
            hosts:
            - grafana.hormonal.party
      dashboards:
        default:
          flux-cluster:
            url: https://raw.githubusercontent.com/fluxcd/flux2/v0.4.2/manifests/monitoring/grafana/dashboards/cluster.json
            datasource: Prometheus
          flux-control-plane:
            url: https://raw.githubusercontent.com/fluxcd/flux2/v0.4.2/manifests/monitoring/grafana/dashboards/control-plane.json
            datasource: Prometheus
      sidecar:
        dashboards:
          enabled: true
          label: grafana_dashboard
          multicluster: false
        datasources:
          enabled: true
          defaultDatasourceEnabled: true
          label: grafana_datasource
      service:
        portName: service
      serviceMonitor:
        selfMonitor: true
        path: "/metrics"
    kubeApiServer:
      enabled: true
      tlsConfig:
        serverName: kubernetes
        insecureSkipVerify: false
      serviceMonitor:
        jobLabel: component
        selector:
          matchLabels:
            component: apiserver
            provider: kubernetes
    kubelet:
      enabled: false
    coreDns:
      enabled: true
      service:
        port: 9153
        targetPort: 9153
        serviceMonitor:
        metricRelabelings:
          - action: keep
            regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
            sourceLabels: [__name__]
        relabelings:
          - sourceLabels: [__meta_kubernetes_pod_node_name]
            separator: ;
            regex: ^(.*)$
            targetLabel: nodename
            replacement: $1
            action: replace
    kubeStateMetrics:
      enabled: false
    nodeExporter:
      enabled: true
      jobLabel: jobLabel
      serviceMonitor:
        metricRelabelings:
          - sourceLabels: [__name__]
            separator: ;
            regex: ^node_mountstats_nfs_(event|operations|transport)_.+
            replacement: $1
            action: drop
        relabelings:
          - sourceLabels: [__meta_kubernetes_pod_node_name]
            separator: ;
            regex: ^(.*)$
            targetLabel: nodename
            replacement: $1
            action: replace
    prometheus-node-exporter:
      namespaceOverride: ""
      podLabels:
        jobLabel: node-exporter
      extraArgs:
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+|mnt/media)($|/)
        - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
    prometheusOperator:
      enabled: true
      serviceAccount:
        create: true
      kubeletService:
        enabled: false
      serviceMonitor:
        selfMonitor: true
        metricRelabelings:
          - action: keep
            regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
            sourceLabels: [__name__]
        relabelings:
          - sourceLabels: [__meta_kubernetes_pod_node_name]
            separator: ;
            regex: ^(.*)$
            targetLabel: nodename
            replacement: $1
            action: replace
      image:
        repository: quay.io/prometheus-operator/prometheus-operator
        tag: v0.46.0
        sha: ""
        pullPolicy: IfNotPresent
      prometheusConfigReloaderImage:
        repository: quay.io/prometheus-operator/prometheus-config-reloader
        tag: v0.46.0
        sha: ""
      configReloaderCpu: 100m
      configReloaderMemory: 50Mi
    prometheus:
      enabled: true
      serviceAccount:
        create: true
      thanosService:
        enabled: false
      service:
        port: 9090
        targetPort: 9090
        nodePort: 30090
        type: ClusterIP
      servicePerReplica:
        enabled: false
      prometheusSpec:
        disableCompaction: false
        listenLocal: false
        enableAdminAPI: false
        image:
          repository: quay.io/prometheus/prometheus
          tag: v2.25.1
          sha: ""
        retention: 10d
        walCompression: false
        paused: false
        replicas: 1
        routePrefix: /
        remoteWriteDashboards: false
        storageSpec:
           volumeClaimTemplate:
             spec:
               storageClassName: local-path
               accessModes: ["ReadWriteOnce"]
               resources:
                 requests:
                   storage: 5Gi
